name: Node.js Package

on:
  push:
    branches: [ "dev", "main", "release/**", "hotfix/**" ]
  pull_request:
    branches: [ "dev", "main", "release/**", "hotfix/**" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  # publishing to github and npm
  publish-gpr:
    if: ${{ github.ref_name == 'main' }}
    needs: [build, bump-version]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  publish-npm:
    if: ${{ github.ref_name == 'main' }}
    needs: [build, bump-version]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  # pulling merge comitts back in dev          
  pull-request:
    if: ${{ github.ref_name != 'dev' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - name: pull-request
      run: |
        echo gh event is ${{ github.event_name}}
        gh pr create  --title "My pull request" --body "Description"



  # pulling merge comitts back in dev
  # pull-request:
  #   if: ${{ github.ref_name != 'dev' }}
  #   needs: [build, bump-version]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: 'Checkout source code'
  #     uses: 'actions/checkout@v4'
  #     with:  
  #       token: ${{ secrets.PAT_TOKEN_GHA_AUTH }}
  #   - id: pull-request
  #     name: pull-request
  #     uses: repo-sync/pull-request@v2
  #     with:
  #       destination_branch: dev
  #       pr_title: "Pulling ${GITHUB_REF#refs/heads/} into dev"
  #       pr_body: "This is an automated Pull Request containing all changes that exist in ${GITHUB_REF#refs/heads/} that do not yet exist in dev"
  #       pr_label: "automated"
  #       github_token: ${{ secrets.PAT_TOKEN_GHA_AUTH }}
  #   - id: approve-pull-request
  #     if: ${{steps.pull-request.outputs.pr_number != ''}}
  #     uses: hmarr/auto-approve-action@v2
  #     with:
  #       github-token: ${{ secrets.PAT_TOKEN_GHA_AUTH }}
  #       pull-request-number: ${{ steps.pull-request.outputs.pr_number }}
  #   - name: automerge
  #     if: ${{steps.pull-request.outputs.pr_number != ''}}
  #     uses: "pascalgn/automerge-action@v0.14.3"
  #     env:
  #       GITHUB_TOKEN: "${{ secrets.PAT_TOKEN_GHA_AUTH }}"
  #       PULL_REQUEST: "${{ steps.pull-request.outputs.pr_number }}"
  #       MERGE_LABELS: ""
  #       MERGE_RETRIES: "0"

  # bump version only if pushing to main branch
  bump-version:
    if: ${{ github.ref_name == 'main' }}
    needs: build
    name: 'Bump Version on the current rc branch'
    runs-on: ubuntu-latest
    permissions:
        packages: write
        contents: write
    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v4'
        with:  
          token: ${{ secrets.PAT_TOKEN_GHA_AUTH }}
      - name: 'cat package.json'
        run: cat ./package.json
      - name: 'Automated Version Bump'
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          tag-prefix: 'v'
          commit-message: 'CI: bumps version to {{version}} [skip ci]'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_GHA_AUTH }}
          GITHUB_USER: akrsmv
      - name: 'cat package.json'
        run: cat ./package.json
      - name: 'Output Step'
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"